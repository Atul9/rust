whitespace
    = [ \t\n\r]

comment
    = "/*" ( [^*] / ([*]+ [^*/] ) )* [*]+ '/' 
    
docstring
    = "/**" ( [^*] / ([*]+ [^*/] ) )* [*]+ '/'

w
    = docstring / comment / whitespace

argname
    = [a-z_][A-Za-z0-9_]*

typename
	= [A-Z][A-Za-z0-9_]*

methodname
	= [A-Z][A-Za-z0-9_]*

reversedomainname /* no hyphen at begin and end */
	= [a-z]+ ( '.' [a-z0-9]+ ([-] [a-z0-9]+)* )+
	  / "xn--" [a-z0-9]+ ( '.' [a-z0-9]+ ([-] [a-z0-9]+)* )+

vtype
    = "bool" 
    / "int8" / "uint8" / "int16" / "uint16" / "int32" / "uint32"
    / "int64" / "uint64" / "float32" / "float64" / "string"
    / typename
    / vstruct

array
    = '[' [0-9]* ']'
    
nullable
    = '?'

vtype_maybe_array
    = vtype array? nullable?

/* at least one and maybe multiple vtype_maybe_array separated by | */
vtype_maybe_union
    = vtype_maybe_array ++ '|'
   
argument
    = w* argname w* ':' w* vtype_maybe_union

vstruct
    = '(' argument ** ',' w* ')'

vtypedef
    = w* "type" (comment / docstring)* whitespace w* typename w* vstruct w*

method
    = w* methodname w* vstruct w* "->" w* vstruct w*

interface_body /* At least one method */
	= vtypedef* method ( method / vtypedef )*
	
interface
	= w* reversedomainname w* '{' interface_body w* '}' w*

#[export]
interfaces
    = interface+